name: Production

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Login via AZ Module
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Pull our code
        uses: actions/checkout@v3
      - name: File Replacements
        run: |
          cd globals
          rm settings.ts
          mv settings.prod.ts settings.ts
          cd ..
      - name: Run DDL Scripts
        run: |
          cd database
          cd ddl-scripts
          az config set extension.use_dynamic_install=yes_without_prompt
          for file in ./*; do az postgres flexible-server execute -n ${{secrets.PG_SERVERNAME}} -u ${{secrets.PG_USERNAME}} -p ${{secrets.PG_PASSWORD}} -d ${{secrets.PG_DATABASE}} -f $file; done
          cd ..
          cd ..
      - name: Deploy Backend
        run: |
          npm i -g azure-functions-core-tools@4 --unsafe-perm true
          func azure functionapp fetch-app-settings readosfu
          mv package.json package.json.original
          cat package.json.original | grep -i -v -E '@angular|@fortawesome|primeng|primeflex|jasmine|karma|rxjs|concurrently"|angular-jwt' > package.json
          npm run deploy
      - name: Build Frontend
        run: |
          rm package.json
          mv package.json.original package.json
          cd frontend
          npm i
          npm run build:fe
          cd ..
      - name: Upload Frontend
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob delete-batch -s '$web' --account-name readossa --connection-string ${{secrets.READOSSA_CONNSTR}}
            az storage blob upload-batch --account-name readossa --auth-mode key --overwrite true -d '$web' -s ./frontend/dist/reados --connection-string ${{secrets.READOSSA_CONNSTR}}
      - name: Purge CDN endpoint
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az cdn endpoint purge --content-paths  "/*" --profile-name "readoscdn" --name "reados" --resource-group "readosrg"
      - name: Logout from AZ
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
